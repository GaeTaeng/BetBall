{"ast":null,"code":"var _jsxFileName = \"/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  players\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [obstacles, setObstacles] = useState([]);\n\n  // 장애물 초기화\n  const initializeObstacles = () => {\n    const newObstacles = [{\n      x: 100,\n      y: 150,\n      width: 50,\n      height: 10\n    }, {\n      x: 250,\n      y: 250,\n      width: 50,\n      height: 10\n    }, {\n      x: 400,\n      y: 350,\n      width: 50,\n      height: 10\n    }];\n    setObstacles(newObstacles);\n  };\n  useEffect(() => {\n    initializeObstacles(); // 컴포넌트가 마운트될 때 장애물 초기화\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const drawGame = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // 캔버스를 지운다\n\n      // 장애물 그리기\n      obstacles.forEach(obstacle => {\n        ctx.fillStyle = 'black';\n        ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);\n      });\n\n      // 참여자(공) 그리기\n      players.forEach((player, index) => {\n        const playerX = 50 + index * 100; // 각 공의 위치를 조금씩 다르게\n        const playerY = 100;\n        ctx.beginPath();\n        ctx.arc(playerX, playerY, 20, 0, Math.PI * 2); // 공 그리기\n        ctx.fillStyle = 'blue'; // 공 색상\n        ctx.fill();\n        ctx.stroke();\n      });\n    };\n    const gameInterval = setInterval(drawGame, 16); // 60fps로 게임을 그리기\n\n    return () => clearInterval(gameInterval); // 컴포넌트 언마운트 시 인터벌 정리\n  }, [players, obstacles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"800\",\n      height: \"600\",\n      style: {\n        background: 'rgb(240, 240, 240)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"LFrINL4FxYnPgt3DK21zsLRmCCA=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GameCanvas","players","_s","canvasRef","obstacles","setObstacles","initializeObstacles","newObstacles","x","y","width","height","canvas","current","ctx","getContext","drawGame","clearRect","forEach","obstacle","fillStyle","fillRect","player","index","playerX","playerY","beginPath","arc","Math","PI","fill","stroke","gameInterval","setInterval","clearInterval","children","ref","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst GameCanvas = ({ players }) => {\n  const canvasRef = useRef(null);\n  const [obstacles, setObstacles] = useState([]);\n\n  // 장애물 초기화\n  const initializeObstacles = () => {\n    const newObstacles = [\n      { x: 100, y: 150, width: 50, height: 10 },\n      { x: 250, y: 250, width: 50, height: 10 },\n      { x: 400, y: 350, width: 50, height: 10 },\n    ];\n    setObstacles(newObstacles);\n  };\n\n  useEffect(() => {\n    initializeObstacles(); // 컴포넌트가 마운트될 때 장애물 초기화\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const drawGame = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // 캔버스를 지운다\n\n      // 장애물 그리기\n      obstacles.forEach((obstacle) => {\n        ctx.fillStyle = 'black';\n        ctx.fillRect(obstacle.x, obstacle.y, obstacle.width, obstacle.height);\n      });\n\n      // 참여자(공) 그리기\n      players.forEach((player, index) => {\n        const playerX = 50 + index * 100; // 각 공의 위치를 조금씩 다르게\n        const playerY = 100;\n\n        ctx.beginPath();\n        ctx.arc(playerX, playerY, 20, 0, Math.PI * 2); // 공 그리기\n        ctx.fillStyle = 'blue'; // 공 색상\n        ctx.fill();\n        ctx.stroke();\n      });\n    };\n\n    const gameInterval = setInterval(drawGame, 16); // 60fps로 게임을 그리기\n\n    return () => clearInterval(gameInterval); // 컴포넌트 언마운트 시 인터벌 정리\n  }, [players, obstacles]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width=\"800\" height=\"600\" style={{ background: 'rgb(240, 240, 240)' }} />\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,YAAY,GAAG,CACnB;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,EACzC;MAAEH,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,EACzC;MAAEH,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAG,CAAC,CAC1C;IACDN,YAAY,CAACE,YAAY,CAAC;EAC5B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdW,mBAAmB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAGT,SAAS,CAACU,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACrBF,GAAG,CAACG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACF,KAAK,EAAEE,MAAM,CAACD,MAAM,CAAC,CAAC,CAAC;;MAElD;MACAP,SAAS,CAACc,OAAO,CAAEC,QAAQ,IAAK;QAC9BL,GAAG,CAACM,SAAS,GAAG,OAAO;QACvBN,GAAG,CAACO,QAAQ,CAACF,QAAQ,CAACX,CAAC,EAAEW,QAAQ,CAACV,CAAC,EAAEU,QAAQ,CAACT,KAAK,EAAES,QAAQ,CAACR,MAAM,CAAC;MACvE,CAAC,CAAC;;MAEF;MACAV,OAAO,CAACiB,OAAO,CAAC,CAACI,MAAM,EAAEC,KAAK,KAAK;QACjC,MAAMC,OAAO,GAAG,EAAE,GAAGD,KAAK,GAAG,GAAG,CAAC,CAAC;QAClC,MAAME,OAAO,GAAG,GAAG;QAEnBX,GAAG,CAACY,SAAS,CAAC,CAAC;QACfZ,GAAG,CAACa,GAAG,CAACH,OAAO,EAAEC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAEG,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/Cf,GAAG,CAACM,SAAS,GAAG,MAAM,CAAC,CAAC;QACxBN,GAAG,CAACgB,IAAI,CAAC,CAAC;QACVhB,GAAG,CAACiB,MAAM,CAAC,CAAC;MACd,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,YAAY,GAAGC,WAAW,CAACjB,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEhD,OAAO,MAAMkB,aAAa,CAACF,YAAY,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAAC/B,OAAO,EAAEG,SAAS,CAAC,CAAC;EAExB,oBACEL,OAAA;IAAAoC,QAAA,eACEpC,OAAA;MAAQqC,GAAG,EAAEjC,SAAU;MAACO,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC,KAAK;MAAC0B,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAqB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7F,CAAC;AAEV,CAAC;AAACxC,EAAA,CAtDIF,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}