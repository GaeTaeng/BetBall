{"ast":null,"code":"var _jsxFileName = \"/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { Engine, Render, World, Bodies, Body, Events } from \"matter-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  players,\n  map\n}) => {\n  _s();\n  const scene = useRef(null);\n  const engine = useRef(Engine.create());\n  const balls = useRef([]);\n  const obstacles = useRef([]);\n  useEffect(() => {\n    const {\n      current: engineInstance\n    } = engine;\n    const render = Render.create({\n      element: scene.current,\n      engine: engineInstance,\n      options: {\n        width: 800,\n        height: 600,\n        wireframes: false\n      }\n    });\n\n    // 월드 초기화\n    World.clear(engineInstance.world);\n    Engine.clear(engineInstance);\n    balls.current = [];\n    obstacles.current = [];\n\n    // 공 생성\n    players.forEach((player, index) => {\n      const ball = Bodies.circle(400, 50 + index * 20, 10, {\n        restitution: 0.8,\n        // 튕김 효과\n        label: player\n      });\n      balls.current.push(ball);\n      World.add(engineInstance.world, ball);\n    });\n\n    // 장애물 및 맵 설정\n    if (map === \"obstacle-heavy\") {\n      for (let i = 0; i < 5; i++) {\n        const obstacle = Bodies.rectangle(Math.random() * 800, Math.random() * 400, 100, 20, {\n          isStatic: true\n        });\n        obstacles.current.push(obstacle);\n        World.add(engineInstance.world, obstacle);\n      }\n    }\n\n    // 출구 생성\n    const exit = Bodies.rectangle(400, 580, 200, 20, {\n      isStatic: true,\n      label: \"exit\"\n    });\n    World.add(engineInstance.world, exit);\n\n    // 엔진 시작\n    Engine.run(engineInstance);\n    Render.run(render);\n\n    // 클린업\n    return () => {\n      Render.stop(render);\n      World.clear(engineInstance.world);\n      Engine.clear(engineInstance);\n    };\n  }, [players, map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scene,\n    style: {\n      border: \"1px solid black\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_s(GameCanvas, \"RAnbAFYdNbkauxGqduTAiZJHAPs=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","Engine","Render","World","Bodies","Body","Events","jsxDEV","_jsxDEV","GameCanvas","players","map","_s","scene","engine","create","balls","obstacles","current","engineInstance","render","element","options","width","height","wireframes","clear","world","forEach","player","index","ball","circle","restitution","label","push","add","i","obstacle","rectangle","Math","random","isStatic","exit","run","stop","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Engine, Render, World, Bodies, Body, Events } from \"matter-js\";\n\nconst GameCanvas = ({ players, map }) => {\n  const scene = useRef(null);\n  const engine = useRef(Engine.create());\n  const balls = useRef([]);\n  const obstacles = useRef([]);\n\n  useEffect(() => {\n    const { current: engineInstance } = engine;\n    const render = Render.create({\n      element: scene.current,\n      engine: engineInstance,\n      options: { width: 800, height: 600, wireframes: false },\n    });\n\n    // 월드 초기화\n    World.clear(engineInstance.world);\n    Engine.clear(engineInstance);\n    balls.current = [];\n    obstacles.current = [];\n\n    // 공 생성\n    players.forEach((player, index) => {\n      const ball = Bodies.circle(400, 50 + index * 20, 10, {\n        restitution: 0.8, // 튕김 효과\n        label: player,\n      });\n      balls.current.push(ball);\n      World.add(engineInstance.world, ball);\n    });\n\n    // 장애물 및 맵 설정\n    if (map === \"obstacle-heavy\") {\n      for (let i = 0; i < 5; i++) {\n        const obstacle = Bodies.rectangle(\n          Math.random() * 800,\n          Math.random() * 400,\n          100,\n          20,\n          { isStatic: true }\n        );\n        obstacles.current.push(obstacle);\n        World.add(engineInstance.world, obstacle);\n      }\n    }\n\n    // 출구 생성\n    const exit = Bodies.rectangle(400, 580, 200, 20, {\n      isStatic: true,\n      label: \"exit\",\n    });\n    World.add(engineInstance.world, exit);\n\n    // 엔진 시작\n    Engine.run(engineInstance);\n    Render.run(render);\n\n    // 클린업\n    return () => {\n      Render.stop(render);\n      World.clear(engineInstance.world);\n      Engine.clear(engineInstance);\n    };\n  }, [players, map]);\n\n  return <div ref={scene} style={{ border: \"1px solid black\" }} />;\n};\n\nexport default GameCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,UAAU,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,KAAK,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMc,MAAM,GAAGd,MAAM,CAACC,MAAM,CAACc,MAAM,CAAC,CAAC,CAAC;EACtC,MAAMC,KAAK,GAAGhB,MAAM,CAAC,EAAE,CAAC;EACxB,MAAMiB,SAAS,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACd,MAAM;MAAEmB,OAAO,EAAEC;IAAe,CAAC,GAAGL,MAAM;IAC1C,MAAMM,MAAM,GAAGlB,MAAM,CAACa,MAAM,CAAC;MAC3BM,OAAO,EAAER,KAAK,CAACK,OAAO;MACtBJ,MAAM,EAAEK,cAAc;MACtBG,OAAO,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,UAAU,EAAE;MAAM;IACxD,CAAC,CAAC;;IAEF;IACAtB,KAAK,CAACuB,KAAK,CAACP,cAAc,CAACQ,KAAK,CAAC;IACjC1B,MAAM,CAACyB,KAAK,CAACP,cAAc,CAAC;IAC5BH,KAAK,CAACE,OAAO,GAAG,EAAE;IAClBD,SAAS,CAACC,OAAO,GAAG,EAAE;;IAEtB;IACAR,OAAO,CAACkB,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MACjC,MAAMC,IAAI,GAAG3B,MAAM,CAAC4B,MAAM,CAAC,GAAG,EAAE,EAAE,GAAGF,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE;QACnDG,WAAW,EAAE,GAAG;QAAE;QAClBC,KAAK,EAAEL;MACT,CAAC,CAAC;MACFb,KAAK,CAACE,OAAO,CAACiB,IAAI,CAACJ,IAAI,CAAC;MACxB5B,KAAK,CAACiC,GAAG,CAACjB,cAAc,CAACQ,KAAK,EAAEI,IAAI,CAAC;IACvC,CAAC,CAAC;;IAEF;IACA,IAAIpB,GAAG,KAAK,gBAAgB,EAAE;MAC5B,KAAK,IAAI0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC1B,MAAMC,QAAQ,GAAGlC,MAAM,CAACmC,SAAS,CAC/BC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EACnBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EACnB,GAAG,EACH,EAAE,EACF;UAAEC,QAAQ,EAAE;QAAK,CACnB,CAAC;QACDzB,SAAS,CAACC,OAAO,CAACiB,IAAI,CAACG,QAAQ,CAAC;QAChCnC,KAAK,CAACiC,GAAG,CAACjB,cAAc,CAACQ,KAAK,EAAEW,QAAQ,CAAC;MAC3C;IACF;;IAEA;IACA,MAAMK,IAAI,GAAGvC,MAAM,CAACmC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;MAC/CG,QAAQ,EAAE,IAAI;MACdR,KAAK,EAAE;IACT,CAAC,CAAC;IACF/B,KAAK,CAACiC,GAAG,CAACjB,cAAc,CAACQ,KAAK,EAAEgB,IAAI,CAAC;;IAErC;IACA1C,MAAM,CAAC2C,GAAG,CAACzB,cAAc,CAAC;IAC1BjB,MAAM,CAAC0C,GAAG,CAACxB,MAAM,CAAC;;IAElB;IACA,OAAO,MAAM;MACXlB,MAAM,CAAC2C,IAAI,CAACzB,MAAM,CAAC;MACnBjB,KAAK,CAACuB,KAAK,CAACP,cAAc,CAACQ,KAAK,CAAC;MACjC1B,MAAM,CAACyB,KAAK,CAACP,cAAc,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACT,OAAO,EAAEC,GAAG,CAAC,CAAC;EAElB,oBAAOH,OAAA;IAAKsC,GAAG,EAAEjC,KAAM;IAACkC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClE,CAAC;AAACxC,EAAA,CAjEIH,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAmEhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}