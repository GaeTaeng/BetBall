{"ast":null,"code":"// src/components/Obstacle.js\nexport class Obstacle {\n  constructor(type, x, y, size) {\n    this.type = type; // 'rect' 또는 'circle'\n    this.x = x;\n    this.y = y;\n    this.size = size; // 직사각형일 때 { width, height }, 원일 때 radius\n  }\n\n  // 장애물 그리기\n  draw(ctx) {\n    ctx.fillStyle = this.type === 'rect' ? 'black' : 'orange';\n    if (this.type === 'rect') {\n      ctx.fillRect(this.x, this.y, this.size.width, this.size.height); // 직사각형\n    } else if (this.type === 'circle') {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size.radius, 0, Math.PI * 2); // 원\n      ctx.fill();\n    }\n  }\n\n  // 충돌 감지\n  checkCollision(ball) {\n    if (this.type === 'rect') {\n      // 직사각형과 충돌\n      return ball.x + ball.radius > this.x && ball.x - ball.radius < this.x + this.size.width && ball.y + ball.radius > this.y && ball.y - ball.radius < this.y + this.size.height;\n    } else if (this.type === 'circle') {\n      // 원과 충돌\n      const distX = ball.x - this.x;\n      const distY = ball.y - this.y;\n      const distance = Math.sqrt(distX * distX + distY * distY);\n      return distance < ball.radius + this.size.radius;\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["Obstacle","constructor","type","x","y","size","draw","ctx","fillStyle","fillRect","width","height","beginPath","arc","radius","Math","PI","fill","checkCollision","ball","distX","distY","distance","sqrt"],"sources":["/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/Obstacle.js"],"sourcesContent":["// src/components/Obstacle.js\nexport class Obstacle {\n    constructor(type, x, y, size) {\n      this.type = type; // 'rect' 또는 'circle'\n      this.x = x;\n      this.y = y;\n      this.size = size; // 직사각형일 때 { width, height }, 원일 때 radius\n    }\n  \n    // 장애물 그리기\n    draw(ctx) {\n      ctx.fillStyle = this.type === 'rect' ? 'black' : 'orange';\n  \n      if (this.type === 'rect') {\n        ctx.fillRect(this.x, this.y, this.size.width, this.size.height); // 직사각형\n      } else if (this.type === 'circle') {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size.radius, 0, Math.PI * 2); // 원\n        ctx.fill();\n      }\n    }\n  \n    // 충돌 감지\n    checkCollision(ball) {\n      if (this.type === 'rect') {\n        // 직사각형과 충돌\n        return ball.x + ball.radius > this.x &&\n               ball.x - ball.radius < this.x + this.size.width &&\n               ball.y + ball.radius > this.y &&\n               ball.y - ball.radius < this.y + this.size.height;\n      } else if (this.type === 'circle') {\n        // 원과 충돌\n        const distX = ball.x - this.x;\n        const distY = ball.y - this.y;\n        const distance = Math.sqrt(distX * distX + distY * distY);\n        return distance < ball.radius + this.size.radius;\n      }\n      return false;\n    }\n  }\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,CAAC;EAClBC,WAAWA,CAACC,IAAI,EAAEC,CAAC,EAAEC,CAAC,EAAEC,IAAI,EAAE;IAC5B,IAAI,CAACH,IAAI,GAAGA,IAAI,CAAC,CAAC;IAClB,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,IAAI,GAAGA,IAAI,CAAC,CAAC;EACpB;;EAEA;EACAC,IAAIA,CAACC,GAAG,EAAE;IACRA,GAAG,CAACC,SAAS,GAAG,IAAI,CAACN,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,QAAQ;IAEzD,IAAI,IAAI,CAACA,IAAI,KAAK,MAAM,EAAE;MACxBK,GAAG,CAACE,QAAQ,CAAC,IAAI,CAACN,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,IAAI,CAACK,KAAK,EAAE,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC;IACnE,CAAC,MAAM,IAAI,IAAI,CAACT,IAAI,KAAK,QAAQ,EAAE;MACjCK,GAAG,CAACK,SAAS,CAAC,CAAC;MACfL,GAAG,CAACM,GAAG,CAAC,IAAI,CAACV,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,IAAI,CAACS,MAAM,EAAE,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;MAC3DT,GAAG,CAACU,IAAI,CAAC,CAAC;IACZ;EACF;;EAEA;EACAC,cAAcA,CAACC,IAAI,EAAE;IACnB,IAAI,IAAI,CAACjB,IAAI,KAAK,MAAM,EAAE;MACxB;MACA,OAAOiB,IAAI,CAAChB,CAAC,GAAGgB,IAAI,CAACL,MAAM,GAAG,IAAI,CAACX,CAAC,IAC7BgB,IAAI,CAAChB,CAAC,GAAGgB,IAAI,CAACL,MAAM,GAAG,IAAI,CAACX,CAAC,GAAG,IAAI,CAACE,IAAI,CAACK,KAAK,IAC/CS,IAAI,CAACf,CAAC,GAAGe,IAAI,CAACL,MAAM,GAAG,IAAI,CAACV,CAAC,IAC7Be,IAAI,CAACf,CAAC,GAAGe,IAAI,CAACL,MAAM,GAAG,IAAI,CAACV,CAAC,GAAG,IAAI,CAACC,IAAI,CAACM,MAAM;IACzD,CAAC,MAAM,IAAI,IAAI,CAACT,IAAI,KAAK,QAAQ,EAAE;MACjC;MACA,MAAMkB,KAAK,GAAGD,IAAI,CAAChB,CAAC,GAAG,IAAI,CAACA,CAAC;MAC7B,MAAMkB,KAAK,GAAGF,IAAI,CAACf,CAAC,GAAG,IAAI,CAACA,CAAC;MAC7B,MAAMkB,QAAQ,GAAGP,IAAI,CAACQ,IAAI,CAACH,KAAK,GAAGA,KAAK,GAAGC,KAAK,GAAGA,KAAK,CAAC;MACzD,OAAOC,QAAQ,GAAGH,IAAI,CAACL,MAAM,GAAG,IAAI,CAACT,IAAI,CAACS,MAAM;IAClD;IACA,OAAO,KAAK;EACd;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}