{"ast":null,"code":"var _jsxFileName = \"/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js\",\n  _s = $RefreshSig$();\n// src/components/GameCanvas.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Ball } from './Ball';\nimport { Obstacle } from './Obstacle';\nimport { PhysicsEngine } from '../physics/PysicsEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  players,\n  gameStarted\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [obstacles, setObstacles] = useState([]);\n  const [balls, setBalls] = useState([]);\n  const [ballColors, setBallColors] = useState([]);\n  const physicsEngine = new PhysicsEngine();\n\n  // 장애물 초기화\n  const initializeObstacles = () => {\n    const newObstacles = [new Obstacle('rect', 100, 150, {\n      width: 50,\n      height: 10\n    }), new Obstacle('circle', 250, 250, {\n      radius: 25\n    }), new Obstacle('rect', 400, 350, {\n      width: 80,\n      height: 15\n    }), new Obstacle('circle', 600, 400, {\n      radius: 30\n    })];\n    setObstacles(newObstacles);\n  };\n\n  // 공 초기화\n  const initializeBalls = () => {\n    const initialBalls = players.map((_, index) => new Ball(50 + index * 100, 100, ballColors[index]));\n    setBalls(initialBalls);\n  };\n\n  // 게임 시작 시 공 및 장애물 초기화\n  useEffect(() => {\n    if (gameStarted) {\n      initializeBalls();\n      initializeObstacles();\n    }\n  }, [gameStarted, players, ballColors]);\n\n  // 캔버스 그리기\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const drawGame = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // 캔버스를 지운다\n\n      // 장애물 그리기\n      obstacles.forEach(obstacle => obstacle.draw(ctx));\n\n      // 공 그리기\n      balls.forEach((ball, index) => {\n        ball.draw(ctx);\n        ball.drawName(ctx, players[index]); // 공 위에 이름 표시\n      });\n\n      // 물리 엔진 업데이트 및 충돌 처리\n      physicsEngine.applyGravity(balls);\n      physicsEngine.handleCollisions(balls, obstacles);\n      physicsEngine.updatePhysics(balls);\n    };\n    const gameInterval = setInterval(drawGame, 16); // 60fps로 게임을 그리기\n\n    return () => clearInterval(gameInterval); // 컴포넌트 언마운트 시 인터벌 정리\n  }, [players, gameStarted, obstacles, balls]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"800\",\n      height: \"600\",\n      style: {\n        background: 'rgb(240, 240, 240)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"rP3kpdeFdR0x+a8hauLbKjhvo3w=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Ball","Obstacle","PhysicsEngine","jsxDEV","_jsxDEV","GameCanvas","players","gameStarted","_s","canvasRef","obstacles","setObstacles","balls","setBalls","ballColors","setBallColors","physicsEngine","initializeObstacles","newObstacles","width","height","radius","initializeBalls","initialBalls","map","_","index","canvas","current","ctx","getContext","drawGame","clearRect","forEach","obstacle","draw","ball","drawName","applyGravity","handleCollisions","updatePhysics","gameInterval","setInterval","clearInterval","children","ref","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/components/GameCanvas.js"],"sourcesContent":["// src/components/GameCanvas.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Ball } from './Ball';\nimport { Obstacle } from './Obstacle';\nimport { PhysicsEngine } from '../physics/PysicsEngine';\n\nconst GameCanvas = ({ players, gameStarted }) => {\n  const canvasRef = useRef(null);\n  const [obstacles, setObstacles] = useState([]);\n  const [balls, setBalls] = useState([]);\n  const [ballColors, setBallColors] = useState([]);\n  const physicsEngine = new PhysicsEngine();\n\n  // 장애물 초기화\n  const initializeObstacles = () => {\n    const newObstacles = [\n      new Obstacle('rect', 100, 150, { width: 50, height: 10 }),\n      new Obstacle('circle', 250, 250, { radius: 25 }),\n      new Obstacle('rect', 400, 350, { width: 80, height: 15 }),\n      new Obstacle('circle', 600, 400, { radius: 30 }),\n    ];\n    setObstacles(newObstacles);\n  };\n\n  // 공 초기화\n  const initializeBalls = () => {\n    const initialBalls = players.map((_, index) => new Ball(50 + index * 100, 100, ballColors[index]));\n    setBalls(initialBalls);\n  };\n\n  // 게임 시작 시 공 및 장애물 초기화\n  useEffect(() => {\n    if (gameStarted) {\n      initializeBalls();\n      initializeObstacles();\n    }\n  }, [gameStarted, players, ballColors]);\n\n  // 캔버스 그리기\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const drawGame = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // 캔버스를 지운다\n\n      // 장애물 그리기\n      obstacles.forEach(obstacle => obstacle.draw(ctx));\n\n      // 공 그리기\n      balls.forEach((ball, index) => {\n        ball.draw(ctx);\n        ball.drawName(ctx, players[index]); // 공 위에 이름 표시\n      });\n\n      // 물리 엔진 업데이트 및 충돌 처리\n      physicsEngine.applyGravity(balls);\n      physicsEngine.handleCollisions(balls, obstacles);\n      physicsEngine.updatePhysics(balls);\n    };\n\n    const gameInterval = setInterval(drawGame, 16); // 60fps로 게임을 그리기\n\n    return () => clearInterval(gameInterval); // 컴포넌트 언마운트 시 인터벌 정리\n  }, [players, gameStarted, obstacles, balls]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width=\"800\" height=\"600\" style={{ background: 'rgb(240, 240, 240)' }} />\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}