{"ast":null,"code":"import Matter from 'matter-js';\nexport const setupWorld = (engine, players) => {\n  const world = engine.world;\n\n  // 바닥 생성\n  const ground = Matter.Bodies.rectangle(400, 590, 800, 20, {\n    isStatic: true,\n    render: {\n      fillStyle: '#000'\n    }\n  });\n  Matter.World.add(world, ground);\n\n  // 공 생성\n  players.forEach((player, index) => {\n    const ball = Matter.Bodies.circle(100 + index * 50, 50, 20, {\n      label: player,\n      restitution: 0.8,\n      // 공의 튀기는 정도\n      render: {\n        fillStyle: '#ff4500'\n      }\n    });\n    Matter.World.add(world, ball);\n  });\n\n  // 장애물 예제\n  const obstacles = [Matter.Bodies.rectangle(400, 300, 150, 20, {\n    isStatic: true,\n    angle: Math.PI / 4\n  }), Matter.Bodies.rectangle(200, 400, 100, 20, {\n    isStatic: true\n  })];\n  Matter.World.add(world, obstacles);\n  return world;\n};","map":{"version":3,"names":["Matter","setupWorld","engine","players","world","ground","Bodies","rectangle","isStatic","render","fillStyle","World","add","forEach","player","index","ball","circle","label","restitution","obstacles","angle","Math","PI"],"sources":["/Users/gimtaehunegimtaehune/Documents/GitHub/gaetaeng/BetBall/src/physics/physicsEngine.js"],"sourcesContent":["import Matter from 'matter-js';\n\nexport const setupWorld = (engine, players) => {\n  const world = engine.world;\n\n  // 바닥 생성\n  const ground = Matter.Bodies.rectangle(400, 590, 800, 20, {\n    isStatic: true,\n    render: { fillStyle: '#000' },\n  });\n  Matter.World.add(world, ground);\n\n  // 공 생성\n  players.forEach((player, index) => {\n    const ball = Matter.Bodies.circle(100 + index * 50, 50, 20, {\n      label: player,\n      restitution: 0.8, // 공의 튀기는 정도\n      render: { fillStyle: '#ff4500' },\n    });\n    Matter.World.add(world, ball);\n  });\n\n  // 장애물 예제\n  const obstacles = [\n    Matter.Bodies.rectangle(400, 300, 150, 20, { isStatic: true, angle: Math.PI / 4 }),\n    Matter.Bodies.rectangle(200, 400, 100, 20, { isStatic: true }),\n  ];\n  Matter.World.add(world, obstacles);\n\n  return world;\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,OAAO,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,OAAO,KAAK;EAC7C,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;;EAE1B;EACA,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAM,CAACC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;IACxDC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE;MAAEC,SAAS,EAAE;IAAO;EAC9B,CAAC,CAAC;EACFV,MAAM,CAACW,KAAK,CAACC,GAAG,CAACR,KAAK,EAAEC,MAAM,CAAC;;EAE/B;EACAF,OAAO,CAACU,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;IACjC,MAAMC,IAAI,GAAGhB,MAAM,CAACM,MAAM,CAACW,MAAM,CAAC,GAAG,GAAGF,KAAK,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MAC1DG,KAAK,EAAEJ,MAAM;MACbK,WAAW,EAAE,GAAG;MAAE;MAClBV,MAAM,EAAE;QAAEC,SAAS,EAAE;MAAU;IACjC,CAAC,CAAC;IACFV,MAAM,CAACW,KAAK,CAACC,GAAG,CAACR,KAAK,EAAEY,IAAI,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAMI,SAAS,GAAG,CAChBpB,MAAM,CAACM,MAAM,CAACC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;IAAEC,QAAQ,EAAE,IAAI;IAAEa,KAAK,EAAEC,IAAI,CAACC,EAAE,GAAG;EAAE,CAAC,CAAC,EAClFvB,MAAM,CAACM,MAAM,CAACC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAC/D;EACDR,MAAM,CAACW,KAAK,CAACC,GAAG,CAACR,KAAK,EAAEgB,SAAS,CAAC;EAElC,OAAOhB,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}